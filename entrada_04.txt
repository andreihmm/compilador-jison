

#include <stdio.h>
#include <stdlib.h>

// Definição de macro
#define MAX 100

// Definição de um struct
struct Data {
    int id;
    char name[50];
};

// Definição de um union
union Value {
    int i;
    float f;
};

// Enumeração de tipos
enum Color { RED, GREEN, BLUE };

// Protótipo de função
void printArray(int *arr, int size);

int main() {
    // Declaração e inicialização de variáveis de vários tipos
    int array[MAX] = {1, 2, 3, 4, 5}; // array com 'define' para tamanho
    int x = 10;
    signed int w = -20;
    unsigned int tt = 50;
    long int rt = 100000;
    short int si = 5;
    float f = 3.14;
    double d = 2.718;
    char ch = 'A';
    const int constant_var = 500;
    volatile int volatile_var = 200;

    // Ponteiro e alocação dinâmica
    int *ptr = (int *)malloc(MAX * sizeof(int));
    if (ptr == NULL) {
        printf("Erro na alocação de memória\n");
        return 1;
    }

    // Inicialização de matriz
    int matrix[3][3] = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    };

    // Inicializando struct
    struct Data data1 = {1, "John"};

    // Inicializando union
    union Value val;
    val.i = 10;

    // Inicializando enum
    enum Color color = RED;

    // Uso de if-else
    if (x > 0) {
        printf("x é positivo.\n");
    } else {
        printf("x é negativo ou zero.\n");
    }

    // Uso de switch-case
    switch (color) {
        case RED:
            printf("A cor é Vermelho.\n");
            break;
        case GREEN:
            printf("A cor é Verde.\n");
            break;
        case BLUE:
            printf("A cor é Azul.\n");
            break;
        default:
            printf("Cor desconhecida.\n");
    }

    // Uso de for
    for (int i = 0; i < 5; i++) {
        printf("For loop - Iteração %d\n", i);
    }

    // Uso de while
    int count = 0;
    while (count < 3) {
        printf("While loop - Contagem: %d\n", count);
        count++;
    }

    // Uso de do-while
    count = 0;
    do {
        printf("Do-while loop - Contagem: %d\n", count);
        count++;
    } while (count < 3);

    // Uso de ponteiro em uma função
    for (int i = 0; i < 10; i++) {
        ptr[i] = i * 10;
    }
    printArray(ptr, 10);

    // Registro de variável
    register int fast_var = 30;
    printf("Variável registrada: %d\n", fast_var);

    // Exemplo de typedef
    typedef unsigned long ULong;
    ULong bigNum = 123456789;
    printf("ULong: %lu\n", bigNum);

    // Liberação de memória alocada
    free(ptr);
    printf("Memória desalocada com sucesso.\n");

    return 0;
}

// Função para imprimir um array usando ponteiro
void printArray(int *arr, int size) {
    printf("Array dinâmico: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}
